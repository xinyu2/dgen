, "H1WP1"    = "AllowWeekendNight"
, "H1WP3"    = "AllowWear"
, "H1WP4"    = "AllowTV"
, "H1WP9"    = "CloseMother"
, "H1WP13"   = "CloseFather"
, "H1GH43"   = "RiskDrink"
, "H1GH44"   = "RiskAIDS"
, "H1PF16"   = "DecisionMake"
))
length(addhealth.sub$HourTV)
sd(addhealth.sub$HourTV)
diff(range(addhealth.sub$HourTV))
table(addhealth.sub$DecisionMake)
# Note for this first variable, there are still three factor levels
str(addhealth.sub$Sex)
#   even though only the first category has observations.
summary(addhealth.sub$Sex)
# First, replace any values that are "NA" with 0 (NA indicates 0 or 100+, so I'm going to code as 0)
#addhealth.sub$Sex[addhealth.sub$Sex == NA] <- 0
# Next, replace any values that are "9" with NA
addhealth.sub$Sex[addhealth.sub$Sex == 6] <- NA
summary(addhealth.sub$Sex)
# Then drop unused factor categories.
addhealth.sub$Sex <- factor(addhealth.sub$Sex)[, drop = TRUE]
summary(addhealth.sub$Sex)
#drop missing values in AllowWeekendNight
summary(addhealth.sub$AllowWeekendNight)
addhealth.sub$AllowWeekendNight[addhealth.sub$AllowWeekendNight == NA] <- 0
addhealth.sub$AllowWeekendNight[addhealth.sub$AllowWeekendNight == 6] <- NA
summary(addhealth.sub$AllowWeekendNight)
addhealth.sub$AllowWeekendNight <- factor(addhealth.sub$AllowWeekendNight)[, drop = TRUE]
summary(addhealth.sub$AllowWeekendNight)
#drop missing values in AllowWear
summary(addhealth.sub$AllowWear)
addhealth.sub$AllowWear[addhealth.sub$AllowWear == NA] <- 0
addhealth.sub$AllowWear[addhealth.sub$AllowWear == 6] <- NA
summary(addhealth.sub$AllowWear)
addhealth.sub$AllowWear <- factor(addhealth.sub$AllowWear)[, drop = TRUE]
summary(addhealth.sub$AllowWear)
summary(addhealth.sub$HourTV)
addhealth.sub$HourTV[addhealth.sub$HourTV == NA] <- 0
addhealth.sub$HourTV[addhealth.sub$HourTV == 996 | addhealth.sub$HourTV == 998 ] <- NA
summary(addhealth.sub$HourTV)
#addhealth.sub$HourTV <- factor(addhealth.sub$HourTV)[, drop = TRUE]
#summary(addhealth.sub$HourTV)
summary(addhealth.sub)
dim(addhealth.sub)
# remove rows with missing values
## na.omit() removes a row if any columns have an NA in that row.
## Do NOT do this if you have at least one variable with many NAs
## because na.oit will remove most of your observations.
addhealth.sub <- na.omit(addhealth.sub)
dim(addhealth.sub)
summary(addhealth.sub)
# Informative labels are given to the variables.
library(Hmisc) # for label()
label(addhealth.sub$Sex) <- "participant gender"
label(addhealth.sub$HourTV)     <- "Hours Watching TV per week"
label(addhealth.sub$AllowWeekendNight)     <- "Allow adolescent decide weekend nights"
label(addhealth.sub$AllowWear)     <- "Allow adolescent decide wearing"
summary(addhealth.sub)
summary(addhealth.sub)
# first label the existing levels
addhealth.sub$Sex <- factor(addhealth.sub$Sex
, labels = c("Male"
, "Female"
)
)
# check ordering with a frequency table
table(addhealth.sub$Sex)
summary(addhealth.sub)
library(ggplot2)
p1 <- ggplot(data = addhealth.sub, aes(x = Sex))
p1 <- p1 + geom_bar()
p1 <- p1 + theme_bw()
p1
hist(addhealth.sub$HourTV)
p <- ggplot(data = addhealth.sub, aes(x = HourTV))
p <- p + geom_histogram(binwidth = 10)
p <- p + geom_rug()
p <- p + labs(x = "Estimated Cigarettes Smoked per Month")
p <- p + theme_bw()
p
p <- ggplot(data = addhealth.sub, aes(x = HourTV))
p <- p + geom_histogram(aes(y=..density..), binwidth = 5)
p <- p + geom_rug()
p <- p + geom_density(alpha=0.1, fill="white", adjust = 1.5)
p <- p + labs(x = "Hours Watching TV per week")
p <- p + theme_bw()
p
summary(addhealth.sub$HourTV)
fivenum(addhealth.sub$HourTV)
median(addhealth.sub$HourTV, na.rm = TRUE)
IQR(addhealth.sub$HourTV, na.rm = TRUE)
The `shape` of the distribution for the hours in watching TV per week
is skewed to the right.
The `center` (median) of the distribution is
`r median(addhealth.sub$HourTV, na.rm = TRUE)`
and the `spread` (interquartile range) for the distribution is
`r IQR(addhealth.sub$HourTV, na.rm = TRUE)`.
IQR(addhealth.sub$HourTV, na.rm = TRUE)
summary(addhealth.sub$AllowWeekendNight)
str(addhealth.sub$HourTV)
summary(addhealth.sub$HourTV)
addhealth.sub$HourTV[addhealth.sub$HourTV>40]
addhealth.sub$HourTV[addhealth.sub$HourTV>70]
addhealth.sub$HourTV[addhealth.sub$HourTV>90]
addhealth.sub$HourTV[addhealth.sub$HourTV=99]
addhealth.sub$HourTV[addhealth.sub$HourTV==99]
sum(addhealth.sub$HourTV[addhealth.sub$HourTV>70])
dim(addhealth.sub$HourTV[addhealth.sub$HourTV>70])
length(addhealth.sub$HourTV[addhealth.sub$HourTV>70])
length(addhealth.sub$HourTV[addhealth.sub$HourTV>90])
length(addhealth.sub$HourTV[addhealth.sub$HourTV==98])
length(addhealth.sub$HourTV[addhealth.sub$HourTV==99])
length(addhealth.sub$HourTV)
sd(addhealth.sub$HourTV)
diff(range(addhealth.sub$HourTV))
dim(addhealth.sub)
2063+2156
View(addhealth.sub)
devtools::install_github("rstudio/rmarkdown")
lm.mercury.alkalinity <- lm(dat$LogAlkalinity ~ dat$LogAvg_Mercury, data = dat)
summary(lm.mercury.alkalinity)
lm.logMercury.alkalinity <- lm(dat$LogAlkalinity ~ dat$Avg_Mercury, data = dat)
summary(lm.logMercury.alkalinity)
lm.Mercury.logAlkalinity <- lm(dat$Alkalinity ~ dat$LogAvg_Mercury, data = dat)
summary(lm.Mercury.logAlkalinity)
```
dat <- read.table("./ADA1_WS_10_DataFishMercury.txt", skip = 25, header = TRUE)
str(dat)
View(addhealth.sub)
library(PDS)
# variables to include in our data subset
var.list <- c("AID"
, "H1GI1M"
, "H1GI1Y"
, "BIO_SEX"
, "H1DA8"
, "H1DA9"
, "H1DA10"
, "H1DA11"
, "H1WP1"
, "H1WP3"
, "H1WP4"
, "H1WP9"
, "H1WP13"
, "H1GH43"
, "H1GH44"
, "H1PF16")
# subset of data
addhealth.sub <- subset(AddHealth, select = var.list)
library(PDS)
AddHealth
dim(AddHealth)
var.list <- c("AID"
, "BIO_SEX"
, "H1TO30"
, "H1TO34"
, "H1GI18"
, "H1TO31")
AddHealth.sub <- subset(AddHealth, select = var.list)
library(plyr)
AddHealth.sub <- rename(AddHealth.sub, c(
"AID"          = "Personal ID"
, "BIO_SEX"          = "Gender"
, "H1TO30"     = "AgeofCannabisUse"
, "H1TO34"     = "AgeOfCocaineUse"
, "H1GI18"      = "InSchool"
, "H1TO31"      = "CannabisUse"
))
library(ggplot2)
p <- ggplot(data = AddHealth.sub, aes(x = InSchool, fill = Gender))
p <- p + geom_bar(position = "fill")
p <- p + theme_bw()
p <- p + labs(title = "Fraction of male or female students who are in school")
# p <- p + scale_fill_discrete(name="In School\nGender")
print(p)
library(ggplot2)
?mpg
head(mpg)
str(mpg)
summary(mpg)
p<-ggplot(mpg,aes(x=displ,y=hwy))
print(p)
p<-p+geom_point()
print(p)
p<-ggplot(mpg,aes(x=displ))
print(p)
p<-p+geom_point()
print(p)
a1<-rnorm(100,-.5,.2)
a2<-rnorm(100,.5,.2)
b<-rnorm(100,.5,.2)
plot(a1,b)
plot(a2,b)
p<-ggplot(aes(x=a1,y=b))
p<-ggplot(data=NULL,aes(x=a1,y=b))
p<-p+geom_point()
print(p)
q<-ggplot(data=NULL,aes(x=a2,y=b))
print(p)
q<-q+geom_point()
print(q)
r<-p+q
print(p+q)
a3<-a1+a2
summary(a3)
?a3
??a3
dir(a3)
type(a3)
size(a3)
length(a3)
length(a1)
a3<-union(a1,a2)
length(a3)
head(a3)
q<-ggplot(data=NULL,aes(x=a3,y=b))
q<-q+geom_point()
print(q)
b<-rnorm(200,.5,.2)
q<-ggplot(data=NULL,aes(x=a3,y=b))
q<-q+geom_point()
print(q)
c<-rnorm(200,0,1)
q<-ggplot(data=NULL,aes(x=a3,y=b,z=c))
q<-q+geom_point()
print(q)
q<-ggplot(data=NULL,aes(x=a3,y=b))
library(plotly)
library(plot3D)
points3D(a3,b,c)
install.packages("plot3D")
library(plot3D)
points3D(a3,b,c)
length(b)
length(c)
points3D(a3,b,c,theta=15,phi=20)
points3D(a3,b,c,theta=15,phi=30)
points3D(a3,b,c,theta=30,phi=30)
points3D(a3,b,c,theta=15,phi=30)
points3D(a3,b,c,theta=5,phi=30)
points3D(a3,b,c,theta=5,phi=20)
points3D(a3,b,c,theta=5,phi=15)
points3D(a3,b,c,theta=5,phi=5)
points3D(a3,b,c,theta=15,phi=5)
points3D(a3,b,c,theta=25,phi=5)
points3D(a3,b,c,theta=45,phi=5)
points3D(a3,b,c,theta=5,phi=5)
points3D(a3,b,c,theta=90,phi=5)
points3D(a3,b,c,theta=0,phi=5)
points3D(a3,b,c,theta=0,phi=0)
points3D(a3,b,c,theta=0,phi=5)
points3D(a3,b,c,theta=90,phi=5)
points3D(a3,b,c,theta=0,phi=5)
points3D(a3,b,c,theta=0,phi=5)
points3D(a3,b,c,theta=90,phi=90)
points3D(a3,b,c,theta=90,phi=0)
points3D(a3,b,c,theta=90,phi=90)
points3D(a3,b,c,theta=0,phi=5)
points3D(a3,b,c,theta=0,phi=5,bty='b')
points3D(a3,b,c,theta=0,phi=5,bty="b")
points3D(a3,b,c,theta=0,phi=5,bty="b2")
points3D(a3,b,c,theta=0,phi=5,bty="g")
points3D(a3,b,c,theta=0,phi=5,bty="b2")
points3D(a3,b,c,theta=0,phi=5,bty="b2",pch=18)
points3D(a3,b,c,theta=20,phi=25,bty="b2",pch=18)
points3D(a3,b,c,theta=60,phi=25,bty="b2",pch=18)
points3D(a3,b,c,theta=90,phi=25,bty="b2",pch=18)
points3D(a3,b,c,theta=0,phi=25,bty="b2",pch=18)
points3D(a3,b,c,theta=0,phi=30,bty="b2",pch=18)
points3D(a3,b,c,theta=0,phi=45,bty="b2",pch=18)
points3D(a3,b,c,theta=0,phi=35,bty="b2",pch=18)
points3D(a3,b,c,theta=10,phi=35,bty="b2",pch=18)
points3D(a3,b,c,theta=20,phi=35,bty="b2",pch=18)
points3D(a3,b,c,theta=30,phi=35,bty="b2",pch=18)
points3D(a3,b,c,theta=40,phi=35,bty="b2",pch=18)
points3D(a3,b,c,theta=50,phi=35,bty="b2",pch=18)
points3D(a3,b,c,theta=60,phi=35,bty="b2",pch=18)
points3D(a3,b,c,theta=70,phi=35,bty="b2",pch=18)
points3D(a3,b,c,theta=80,phi=35,bty="b2",pch=18)
points3D(a3,b,c,theta=90,phi=35,bty="b2",pch=18)
points3D(a3,b,c,theta=90,phi=90,bty="b2",pch=18)
points3D(a3,b,c,theta=90,phi=35,bty="b2",pch=18)
points3D(a3,b,c,theta=90,phi=15,bty="b2",pch=18)
points3D(a3,b,c,theta=90,phi=5,bty="b2",pch=18)
points3D(a3,b,c,theta=90,phi=0,bty="b2",pch=18)
b1<-rnorm(100,-.5,.2)
b2<-rnorm(100,.5,.2)
b3<-union(b1,b2)
cc<-rnorm(200,.5,.2)
a<-rnorm(200,0,1)
dfabc<-data.frame(a3,b,c)
head(dfabc)
dfbca<-data.frame(b3,cc,a)
head(dfbca)
?rbind.data.frame
df<-rbind(dfabc,dfbca)
?data.frame
colnames(dfabc)<-("a","b","c")
colnames(dfabc)<-c("a","b","c")
colnames(dfbca)<-c("b","c","a")
df<-rbind(dfabc,dfbca)
head(df)
?scatter3D
with(df,points3D(a,b,c,theta=90,phi=5,pch=18))
with(df,points3D(a,b,c,theta=5,phi=5,pch=18))
with(df,points3D(a,b,c,theta=15,phi=15,pch=18))
with(df,points3D(a,b,c,theta=15,phi=5,pch=18))
with(df,points3D(a,b,c,theta=25,phi=5,pch=18))
with(df,points3D(a,b,c,theta=35,phi=5,pch=18))
with(df,points3D(a,b,c,theta=45,phi=5,pch=18))
with(df,points3D(a,b,c,theta=90,phi=5,pch=18))
with(df,points3D(a,b,c,theta=90,phi=45,pch=18))
with(df,points3D(a,b,c,theta=45,phi=45,pch=18))
with(df,points3D(a,b,c,theta=90,phi=0,pch=18))
with(df,points3D(a,b,c,theta=0,phi=0,pch=18))
with(df,points3D(a,b,c,theta=5,phi=5,pch=18))
with(df,points3D(a,b,c,theta=15,phi=15,pch=18))
with(df,points3D(a,b,c,theta=15,phi=5,pch=18))
with(df,points3D(a,b,c,theta=20,phi=5,pch=18))
with(df,points3D(a,b,c,theta=10,phi=5,pch=18))
with(df,points3D(a,b,c,theta=30,phi=5,pch=18))
with(df,points3D(a,b,c,theta=40,phi=5,pch=18))
with(df,points3D(a,b,c,theta=50,phi=5,pch=18))
with(df,points3D(a,b,c,theta=60,phi=5,pch=18))
with(df,points3D(a,b,c,theta=70,phi=5,pch=18))
with(df,points3D(a,b,c,theta=80,phi=5,pch=18))
with(df,points3D(a,b,c,theta=90,phi=5,pch=18))
with(df,points3D(a,b,c,theta=100,phi=5,pch=18))
with(df,points3D(a,b,c,theta=100,phi=0,pch=18))
with(df,points3D(a,b,c,theta=100,phi=50,pch=18))
with(df,points3D(a,b,c,theta=100,phi=90,pch=18))
with(df,points3D(a,b,c,theta=90,phi=90,pch=18))
with(df,points3D(a,b,c,theta=0,phi=0,pch=18))
with(df,points3D(a,b,c,theta=150,phi=150,pch=18))
with(df,points3D(a,b,c,theta=180,phi=180,pch=18))
with(df,points3D(a,b,c,theta=0,phi=90,pch=18))
with(df,points3D(a,b,c,theta=90,phi=90,pch=18))
with(df,points3D(a,b,c,theta=90,phi=0,pch=18))
with(df,points3D(a,b,c,theta=0,phi=0,pch=18))
with(df,points3D(a,b,c,theta=0,phi=10,pch=18))
with(df,points3D(a,b,c,theta=0,phi=20,pch=18))
with(df,points3D(a,b,c,theta=20,phi=20,pch=18))
with(df,points3D(a,b,c,theta=30,phi=20,pch=18))
with(df,points3D(a,b,c,theta=40,phi=20,pch=18))
with(df,points3D(a,b,c,theta=40,phi=40,pch=18))
with(df,points3D(a,b,c,theta=0,phi=40,pch=18))
with(df,points3D(a,b,c,theta=0,phi=0,pch=18))
with(df,points3D(a,b,c,theta=0,phi=0,pch=18))
head(df)
length(df)
summary(df)
?data.frame
nrow(df)
df$idx<-seq.int(nrow(df))
head(df)
df
df[,"idx",a]
df[,c("idx","a")]
pja<-df[,c("idx","a")]
pjb<-df[,c("idx","b")]
pjc<-df[,c("idx","c")]
with(pja,scatter2D(idx,a))
with(pja,scatter2D(idx,a,pch=18))
with(pjb,scatter2D(idx,b,pch=18))
with(pjc,scatter2D(idx,c,pch=18))
with(pja,scatter2D(idx,a,pch=18))
pjab<-df[,c("idx","a","b")]
pjbc<-df[,c("idx","b","c")]
pjac<-df[,c("idx","a","c")]
pjab<-df[,c("a","b")]
pjbc<-df[,c("b","c")]
pjac<-df[,c("a","c")]
with(pjab,scatter2D(a,b,pch=18))
with(pjbc,scatter2D(b,c,pch=18))
with(pjac,scatter2D(a,c,pch=18))
with(pjab,scatter2D(a,b,pch=18))
with(pjac,scatter2D(a,c,pch=18))
with(pjbc,scatter2D(b,c,pch=18))
c1<-rnorm(10,-1,.1)
c1<-rnorm(10,-10,1)
c1<-rnorm(10,-100,1)
c1
c1<-sample.int(10,size=100,replace=TRUE)
c1
c1<-sample.int(-10:10,size=10,replace=TRUE)
c1<-sample.int(100,size=10,replace=TRUE)
c1
c1<-sample.int(10,size=10,replace=TRUE)
c1
plot(c1)
p<-ggplot(data=c1,aes(c1))+geom_histogram
library(ggplot2)
p<-ggplot(data=c1,aes(c1))+geom_histogram
p<-ggplot(aes(c1))+geom_histogram
p<-ggplot(data=c1)+geom_histogram
summary(c1)
c1
c1<-sample(-10:10,size=10,replace=TRUE)
c1
c1<-sample(-10:10,size=10,replace=TRUE)
c1
-10.5/2
-5.25-.5
-5.75/2
3.75/2
(4.25+9)/2
(-10-5.25)/2
10-7.625
9-6.625
(-10-7.625)/2
(-5.25-2.875)/2
(-2.875-.5)/2
(-1.6875-.5)/2
(1.875-.5)/2
(1.875+4.25)/2
size
size <- 20
set.seed(1)
x
x <- runif(size)
y <- runif(size)
plot(x,y)
df <- data.frame(x,y)
df
plot(df)
plot(df)
x<-sample.int(10,size=10,replace=TRUE)
y<-sample.int(10,size=10,replace=TRUE)
df <- data.frame(x,y)
plot(df)
x
x<-sample.int(-10:10,size=10,replace=TRUE)
x<-sample.int(-10:10,size=10,replace=TRUE)
c1<-sample(-10:10,size=10,replace=TRUE)
x<-sample(-10:10,size=10,replace=TRUE)
y<-sample(-10:10,size=10,replace=TRUE)
df <- data.frame(x,y)
plot(df)
plot(x)
plot(y)
plot(df)
x
y
x<-sample(-10:10,size=20,replace=TRUE)
y<-sample(-10:10,size=20,replace=TRUE)
df <- data.frame(x,y)
plot(x)
plot(y)
plot(df)
plot(x)
x
x<-sample(-10:10,size=30,replace=TRUE)
y<-sample(-10:10,size=30,replace=TRUE)
df <- data.frame(x,y)
plot(x)
plot(y)
plot(df)
x<-sample(-10:10,size=40,replace=TRUE)
y<-sample(-10:10,size=40,replace=TRUE)
df <- data.frame(x,y)
plot(x)
plot(y)
plot(df)
x<-sample(-10:10,size=20,replace=TRUE)
y<-sample(-10:10,size=20,replace=TRUE)
time()
?time
set.seed(100)
x<-sample(-10:10,size=20,replace=TRUE)
y<-sample(-10:10,size=20,replace=TRUE)
df <- data.frame(x,y)
plot(x)
plot(y)
plot(df)
a1<-rnorm(50,-1,.5)
b1 <- 0.9*a1
b2 <- 0.9*a1 + 2
df1=data.frame(x=a1,y=b1)
df2=data.frame(x=a1,y=b2)
m <- rbind(df1,df2)
p <- ggplot(data=m,aes(x=x,y=y))
p <- p + geom_point(alpha=1/4)
p <- p + geom_jitter(position = position_jitter(width = 0.2), alpha = 1/2)
print(p)
library(ggplot2)
p <- ggplot(data=m,aes(x=x,y=y))
p <- p + geom_point(alpha=1/4)
p <- p + geom_jitter(position = position_jitter(width = 0.2), alpha = 1/2)
print(p)
summary(b1)
summary(b2)
summary(a1)
summary(a2)
pwd
dir
setwd("~/Documents/code/gpumafia/utils/clugen")
mydata=read.table("cluster-8.dat")
dim(mydata)
mydata[0]
summary(mydata$V1)
summary(mydata$V2)
summary(mydata$V3)
summary(mydata$V4)
summary(mydata$V5)
summary(mydata$V6)
summary(mydata$V7)
summary(mydata$V8)
summary(mydata$V9)
summary(mydata$V10)
